name: "Terraform Plan"

concurrency: production
on:
  pull_request:
  push:
    branches:
      - main

jobs:
  terraform-plan:
    name: "Terraform Plan"
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Setup terraform
        uses: hashicorp/setup-terraform@v3

      - name: Initialize
        run: terraform init
        working-directory: ./infra

      - name: Plan
        run: terraform plan -out .planfile"
        working-directory: ./infra

      - name: Post PR comment
        uses: borchero/terraform-plan-comment@v2
        with:
          token: ${{ github.token }}
          planfile: .planfile
          working-directory: ./infra

  terraform-apply:
    needs: terraform-plan
    name: "Terraform Apply"
    runs-on: ubuntu-latest
    environment: production
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup terraform
        uses: hashicorp/setup-terraform@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Initialize
        run: terraform init
        working-directory: ./infra

      - name: Apply
        run: terraform apply -auto-approve"
        working-directory: ./infra

  deploy-lambda-images:
    needs: terraform-apply
    name: "Deploy Lambda Images"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push lambda images
        id: build-lambda-images
        env:
          IMAGE_URI: ${{ steps.login-ecr.outputs.registry }}/cashflow:${{ env.IMAGE_TAG }}
        run: |
          docker build -t ${{ env.IMAGE_URI }} .
          docker push ${{ env.IMAGE_URI }}
          echo ${{ env.IMAGE_URI }} >  >> "$GITHUB_OUTPUT"


      - name: Deploy No-Op Lambda Function
        uses: aws-actions/aws-lambda-deploy@v1.1.0
        with:
          function-name: cashflow-nop
          package-type: Image
          image-uri: ${{ steps.build-lambda-images.outputs.image_uri }}
          handler: nop.handler
          role: cashflow-lambda-role
